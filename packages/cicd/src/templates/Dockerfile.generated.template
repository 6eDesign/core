FROM {{BASE_IMAGE}} AS base
ENV PNPM_HOME="/pnpm"
ENV PATH="$PNPM_HOME:$PATH"
RUN corepack enable
{{ENV_VARS}}
{{OS_DEPENDENCIES_INSTALL}}
WORKDIR /app

# ---- Prune stage ----
FROM base AS pruning
ARG workspace
COPY . /app/
RUN npx turbo@$(node -p -e "require('./package.json').devDependencies['turbo']") prune --scope=${workspace} --docker --out-dir=/app/pruned

# ---- Dependencies ----
FROM base AS deps
COPY --from=pruning /app/pruned/json/ /app/
RUN pnpm install --frozen-lockfile

# ---- Build ----
FROM base AS build
ARG workspace
COPY --from=deps /app/ /app/
COPY --from=pruning /app/pruned/full/ /app/
RUN npx turbo@$(node -p -e "require('./package.json').devDependencies['turbo']") run build --filter=${workspace}

# ---- Deploy (prune) ----
FROM base AS deploy
ARG workspace
COPY --from=build /app/ /app/
RUN pnpm deploy --filter=${workspace} --prod /prod/app

# ---- Final image ----
FROM base AS prod
COPY --from=deploy /prod/app /prod/app
WORKDIR /prod/app
EXPOSE 8080
ENV NODE_ENV=production
CMD {{CMD}}