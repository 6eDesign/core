// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`OpenAPI Generation > should correctly represent arrays and unions 1`] = `
{
  "components": {
    "parameters": {},
    "schemas": {},
  },
  "info": {
    "title": "ComplexService API Spec",
    "version": "1.0",
  },
  "openapi": "3.0.0",
  "paths": {
    "/process": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "data": {
                    "items": {
                      "properties": {
                        "id": {
                          "type": "string",
                        },
                        "value": {
                          "type": "string",
                        },
                      },
                      "required": [
                        "id",
                        "value",
                      ],
                      "type": "object",
                    },
                    "type": "array",
                  },
                  "result": {
                    "anyOf": [
                      {
                        "type": "string",
                      },
                      {
                        "type": "number",
                      },
                    ],
                  },
                  "status": {
                    "enum": [
                      "pending",
                      "completed",
                      "failed",
                    ],
                    "type": "string",
                  },
                  "tags": {
                    "items": {
                      "type": "string",
                    },
                    "minItems": 1,
                    "type": "array",
                  },
                },
                "required": [
                  "tags",
                  "status",
                  "result",
                ],
                "type": "object",
              },
            },
          },
          "description": "",
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "details": {
                      "anyOf": [
                        {
                          "items": {
                            "type": "string",
                          },
                          "type": "array",
                        },
                        {
                          "nullable": true,
                        },
                        {
                          "nullable": true,
                        },
                      ],
                    },
                    "itemsProcessed": {
                      "type": "number",
                    },
                    "summary": {
                      "type": "string",
                    },
                  },
                  "required": [
                    "summary",
                    "details",
                    "itemsProcessed",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Success",
          },
        },
      },
    },
  },
  "servers": [
    {
      "url": "/",
    },
  ],
}
`;

exports[`OpenAPI Generation > should generate a well-formed OpenAPI document for basic types 1`] = `
{
  "components": {
    "parameters": {},
    "schemas": {},
  },
  "info": {
    "title": "BasicService API Spec",
    "version": "1.0",
  },
  "openapi": "3.0.0",
  "paths": {
    "/basic": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "age": {
                    "exclusiveMinimum": true,
                    "minimum": 0,
                    "type": "integer",
                  },
                  "email": {
                    "format": "email",
                    "type": "string",
                  },
                  "isActive": {
                    "default": true,
                    "type": "boolean",
                  },
                  "name": {
                    "maxLength": 255,
                    "minLength": 3,
                    "type": "string",
                  },
                },
                "required": [
                  "name",
                  "age",
                ],
                "type": "object",
              },
            },
          },
          "description": "",
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "age": {
                      "exclusiveMinimum": true,
                      "minimum": 0,
                      "type": "integer",
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string",
                    },
                    "email": {
                      "format": "email",
                      "type": "string",
                    },
                    "id": {
                      "format": "uuid",
                      "type": "string",
                    },
                    "isActive": {
                      "default": true,
                      "type": "boolean",
                    },
                    "name": {
                      "maxLength": 255,
                      "minLength": 3,
                      "type": "string",
                    },
                  },
                  "required": [
                    "id",
                    "name",
                    "age",
                    "createdAt",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Success",
          },
        },
      },
    },
    "/basic/:id": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string",
            },
          },
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "age": {
                      "exclusiveMinimum": true,
                      "minimum": 0,
                      "type": "integer",
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string",
                    },
                    "email": {
                      "format": "email",
                      "type": "string",
                    },
                    "id": {
                      "format": "uuid",
                      "type": "string",
                    },
                    "isActive": {
                      "default": true,
                      "type": "boolean",
                    },
                    "name": {
                      "maxLength": 255,
                      "minLength": 3,
                      "type": "string",
                    },
                  },
                  "required": [
                    "id",
                    "name",
                    "age",
                    "createdAt",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Success",
          },
        },
      },
    },
  },
  "servers": [
    {
      "url": "/",
    },
  ],
}
`;

exports[`OpenAPI Generation > should handle optional, nullable, and default values 1`] = `
{
  "components": {
    "parameters": {},
    "schemas": {},
  },
  "info": {
    "title": "OptionalService API Spec",
    "version": "1.0",
  },
  "openapi": "3.0.0",
  "paths": {
    "/optional": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string",
            },
          },
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "default": 0,
                      "type": "number",
                    },
                    "description": {
                      "type": "string",
                    },
                    "name": {
                      "type": "string",
                    },
                    "notes": {
                      "nullable": true,
                      "type": "string",
                    },
                  },
                  "required": [
                    "name",
                    "notes",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Success",
          },
        },
      },
    },
  },
  "servers": [
    {
      "url": "/",
    },
  ],
}
`;
